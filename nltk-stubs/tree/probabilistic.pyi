from _typeshed import Incomplete
from nltk.probability import ProbabilisticMixIn
from nltk.tree.tree import Tree

__all__ = ['ProbabilisticTree']

class ProbabilisticTree(Tree, ProbabilisticMixIn):
    def __init__(self, node, children: Incomplete | None = None, **prob_kwargs) -> None: ...
    def copy(self, deep: bool = False): ...
    @classmethod
    def convert(cls, val): ...
    def __eq__(self, other): ...
    def __lt__(self, other): ...
